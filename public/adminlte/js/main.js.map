{"version":3,"sources":["app.min.js","rails.js","delete-form.js","adminlte.js"],"names":[],"mappingsiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["/*! AdminLTE app.js\n * ================\n * Main JS application file for AdminLTE v2. This file\n * should be included in all pages. It controls some layout\n * options and implements exclusive AdminLTE plugins.\n *\n * @Author  Almsaeed Studio\n * @Support <http://www.almsaeedstudio.com>\n * @Email   <support@almsaeedstudio.com>\n * @version 2.3.2\n * @license MIT <http://opensource.org/licenses/MIT>\n */\nfunction _init(){\"use strict\";$.AdminLTE.layout={activate:function(){var a=this;a.fix(),a.fixSidebar(),$(window,\".wrapper\").resize(function(){a.fix(),a.fixSidebar()})},fix:function(){var a=$(\".main-header\").outerHeight()+$(\".main-footer\").outerHeight(),b=$(window).height(),c=$(\".sidebar\").height();if($(\"body\").hasClass(\"fixed\"))$(\".content-wrapper, .right-side\").css(\"min-height\",b-$(\".main-footer\").outerHeight());else{var d;b>=c?($(\".content-wrapper, .right-side\").css(\"min-height\",b-a),d=b-a):($(\".content-wrapper, .right-side\").css(\"min-height\",c),d=c);var e=$($.AdminLTE.options.controlSidebarOptions.selector);\"undefined\"!=typeof e&&e.height()>d&&$(\".content-wrapper, .right-side\").css(\"min-height\",e.height())}},fixSidebar:function(){return $(\"body\").hasClass(\"fixed\")?(\"undefined\"==typeof $.fn.slimScroll&&window.console&&window.console.error(\"Error: the fixed layout requires the slimscroll plugin!\"),void($.AdminLTE.options.sidebarSlimScroll&&\"undefined\"!=typeof $.fn.slimScroll&&($(\".sidebar\").slimScroll({destroy:!0}).height(\"auto\"),$(\".sidebar\").slimscroll({height:$(window).height()-$(\".main-header\").height()+\"px\",color:\"rgba(0,0,0,0.2)\",size:\"3px\"})))):void(\"undefined\"!=typeof $.fn.slimScroll&&$(\".sidebar\").slimScroll({destroy:!0}).height(\"auto\"))}},$.AdminLTE.pushMenu={activate:function(a){var b=$.AdminLTE.options.screenSizes;$(document).on(\"click\",a,function(a){a.preventDefault(),$(window).width()>b.sm-1?$(\"body\").hasClass(\"sidebar-collapse\")?$(\"body\").removeClass(\"sidebar-collapse\").trigger(\"expanded.pushMenu\"):$(\"body\").addClass(\"sidebar-collapse\").trigger(\"collapsed.pushMenu\"):$(\"body\").hasClass(\"sidebar-open\")?$(\"body\").removeClass(\"sidebar-open\").removeClass(\"sidebar-collapse\").trigger(\"collapsed.pushMenu\"):$(\"body\").addClass(\"sidebar-open\").trigger(\"expanded.pushMenu\")}),$(\".content-wrapper\").click(function(){$(window).width()<=b.sm-1&&$(\"body\").hasClass(\"sidebar-open\")&&$(\"body\").removeClass(\"sidebar-open\")}),($.AdminLTE.options.sidebarExpandOnHover||$(\"body\").hasClass(\"fixed\")&&$(\"body\").hasClass(\"sidebar-mini\"))&&this.expandOnHover()},expandOnHover:function(){var a=this,b=$.AdminLTE.options.screenSizes.sm-1;$(\".main-sidebar\").hover(function(){$(\"body\").hasClass(\"sidebar-mini\")&&$(\"body\").hasClass(\"sidebar-collapse\")&&$(window).width()>b&&a.expand()},function(){$(\"body\").hasClass(\"sidebar-mini\")&&$(\"body\").hasClass(\"sidebar-expanded-on-hover\")&&$(window).width()>b&&a.collapse()})},expand:function(){$(\"body\").removeClass(\"sidebar-collapse\").addClass(\"sidebar-expanded-on-hover\")},collapse:function(){$(\"body\").hasClass(\"sidebar-expanded-on-hover\")&&$(\"body\").removeClass(\"sidebar-expanded-on-hover\").addClass(\"sidebar-collapse\")}},$.AdminLTE.tree=function(a){var b=this,c=$.AdminLTE.options.animationSpeed;$(a).on(\"click\",\"li a\",function(a){var d=$(this),e=d.next();if(e.is(\".treeview-menu\")&&e.is(\":visible\")&&!$(\"body\").hasClass(\"sidebar-collapse\"))e.slideUp(c,function(){e.removeClass(\"menu-open\")}),e.parent(\"li\").removeClass(\"active\");else if(e.is(\".treeview-menu\")&&!e.is(\":visible\")){var f=d.parents(\"ul\").first(),g=f.find(\"ul:visible\").slideUp(c);g.removeClass(\"menu-open\");var h=d.parent(\"li\");e.slideDown(c,function(){e.addClass(\"menu-open\"),f.find(\"li.active\").removeClass(\"active\"),h.addClass(\"active\"),b.layout.fix()})}e.is(\".treeview-menu\")&&a.preventDefault()})},$.AdminLTE.controlSidebar={activate:function(){var a=this,b=$.AdminLTE.options.controlSidebarOptions,c=$(b.selector),d=$(b.toggleBtnSelector);d.on(\"click\",function(d){d.preventDefault(),c.hasClass(\"control-sidebar-open\")||$(\"body\").hasClass(\"control-sidebar-open\")?a.close(c,b.slide):a.open(c,b.slide)});var e=$(\".control-sidebar-bg\");a._fix(e),$(\"body\").hasClass(\"fixed\")?a._fixForFixed(c):$(\".content-wrapper, .right-side\").height()<c.height()&&a._fixForContent(c)},open:function(a,b){b?a.addClass(\"control-sidebar-open\"):$(\"body\").addClass(\"control-sidebar-open\")},close:function(a,b){b?a.removeClass(\"control-sidebar-open\"):$(\"body\").removeClass(\"control-sidebar-open\")},_fix:function(a){var b=this;$(\"body\").hasClass(\"layout-boxed\")?(a.css(\"position\",\"absolute\"),a.height($(\".wrapper\").height()),$(window).resize(function(){b._fix(a)})):a.css({position:\"fixed\",height:\"auto\"})},_fixForFixed:function(a){a.css({position:\"fixed\",\"max-height\":\"100%\",overflow:\"auto\",\"padding-bottom\":\"50px\"})},_fixForContent:function(a){$(\".content-wrapper, .right-side\").css(\"min-height\",a.height())}},$.AdminLTE.boxWidget={selectors:$.AdminLTE.options.boxWidgetOptions.boxWidgetSelectors,icons:$.AdminLTE.options.boxWidgetOptions.boxWidgetIcons,animationSpeed:$.AdminLTE.options.animationSpeed,activate:function(a){var b=this;a||(a=document),$(a).on(\"click\",b.selectors.collapse,function(a){a.preventDefault(),b.collapse($(this))}),$(a).on(\"click\",b.selectors.remove,function(a){a.preventDefault(),b.remove($(this))})},collapse:function(a){var b=this,c=a.parents(\".box\").first(),d=c.find(\"> .box-body, > .box-footer, > form  >.box-body, > form > .box-footer\");c.hasClass(\"collapsed-box\")?(a.children(\":first\").removeClass(b.icons.open).addClass(b.icons.collapse),d.slideDown(b.animationSpeed,function(){c.removeClass(\"collapsed-box\")})):(a.children(\":first\").removeClass(b.icons.collapse).addClass(b.icons.open),d.slideUp(b.animationSpeed,function(){c.addClass(\"collapsed-box\")}))},remove:function(a){var b=a.parents(\".box\").first();b.slideUp(this.animationSpeed)}}}if(\"undefined\"==typeof jQuery)throw new Error(\"AdminLTE requires jQuery\");$.AdminLTE={},$.AdminLTE.options={navbarMenuSlimscroll:!0,navbarMenuSlimscrollWidth:\"3px\",navbarMenuHeight:\"200px\",animationSpeed:500,sidebarToggleSelector:\"[data-toggle='offcanvas']\",sidebarPushMenu:!0,sidebarSlimScroll:!0,sidebarExpandOnHover:!1,enableBoxRefresh:!0,enableBSToppltip:!0,BSTooltipSelector:\"[data-toggle='tooltip']\",enableFastclick:!0,enableControlSidebar:!0,controlSidebarOptions:{toggleBtnSelector:\"[data-toggle='control-sidebar']\",selector:\".control-sidebar\",slide:!0},enableBoxWidget:!0,boxWidgetOptions:{boxWidgetIcons:{collapse:\"fa-minus\",open:\"fa-plus\",remove:\"fa-times\"},boxWidgetSelectors:{remove:'[data-widget=\"remove\"]',collapse:'[data-widget=\"collapse\"]'}},directChat:{enable:!0,contactToggleSelector:'[data-widget=\"chat-pane-toggle\"]'},colors:{lightBlue:\"#3c8dbc\",red:\"#f56954\",green:\"#00a65a\",aqua:\"#00c0ef\",yellow:\"#f39c12\",blue:\"#0073b7\",navy:\"#001F3F\",teal:\"#39CCCC\",olive:\"#3D9970\",lime:\"#01FF70\",orange:\"#FF851B\",fuchsia:\"#F012BE\",purple:\"#8E24AA\",maroon:\"#D81B60\",black:\"#222222\",gray:\"#d2d6de\"},screenSizes:{xs:480,sm:768,md:992,lg:1200}},$(function(){\"use strict\";$(\"body\").removeClass(\"hold-transition\"),\"undefined\"!=typeof AdminLTEOptions&&$.extend(!0,$.AdminLTE.options,AdminLTEOptions);var a=$.AdminLTE.options;_init(),$.AdminLTE.layout.activate(),$.AdminLTE.tree(\".sidebar\"),a.enableControlSidebar&&$.AdminLTE.controlSidebar.activate(),a.navbarMenuSlimscroll&&\"undefined\"!=typeof $.fn.slimscroll&&$(\".navbar .menu\").slimscroll({height:a.navbarMenuHeight,alwaysVisible:!1,size:a.navbarMenuSlimscrollWidth}).css(\"width\",\"100%\"),a.sidebarPushMenu&&$.AdminLTE.pushMenu.activate(a.sidebarToggleSelector),a.enableBSToppltip&&$(\"body\").tooltip({selector:a.BSTooltipSelector}),a.enableBoxWidget&&$.AdminLTE.boxWidget.activate(),a.enableFastclick&&\"undefined\"!=typeof FastClick&&FastClick.attach(document.body),a.directChat.enable&&$(document).on(\"click\",a.directChat.contactToggleSelector,function(){var a=$(this).parents(\".direct-chat\").first();a.toggleClass(\"direct-chat-contacts-open\")}),$('.btn-group[data-toggle=\"btn-toggle\"]').each(function(){var a=$(this);$(this).find(\".btn\").on(\"click\",function(b){a.find(\".btn.active\").removeClass(\"active\"),$(this).addClass(\"active\"),b.preventDefault()})})}),function(a){\"use strict\";a.fn.boxRefresh=function(b){function c(a){a.append(f),e.onLoadStart.call(a)}function d(a){a.find(f).remove(),e.onLoadDone.call(a)}var e=a.extend({trigger:\".refresh-btn\",source:\"\",onLoadStart:function(a){return a},onLoadDone:function(a){return a}},b),f=a('<div class=\"overlay\"><div class=\"fa fa-refresh fa-spin\"></div></div>');return this.each(function(){if(\"\"===e.source)return void(window.console&&window.console.log(\"Please specify a source first - boxRefresh()\"));var b=a(this),f=b.find(e.trigger).first();f.on(\"click\",function(a){a.preventDefault(),c(b),b.find(\".box-body\").load(e.source,function(){d(b)})})})}}(jQuery),function(a){\"use strict\";a.fn.activateBox=function(){a.AdminLTE.boxWidget.activate(this)},a.fn.toggleBox=function(){var b=a(a.AdminLTE.boxWidget.selectors.collapse,this);a.AdminLTE.boxWidget.collapse(b)},a.fn.removeBox=function(){var b=a(a.AdminLTE.boxWidget.selectors.remove,this);a.AdminLTE.boxWidget.remove(b)}}(jQuery),function(a){\"use strict\";a.fn.todolist=function(b){var c=a.extend({onCheck:function(a){return a},onUncheck:function(a){return a}},b);return this.each(function(){\"undefined\"!=typeof a.fn.iCheck?(a(\"input\",this).on(\"ifChecked\",function(){var b=a(this).parents(\"li\").first();b.toggleClass(\"done\"),c.onCheck.call(b)}),a(\"input\",this).on(\"ifUnchecked\",function(){var b=a(this).parents(\"li\").first();b.toggleClass(\"done\"),c.onUncheck.call(b)})):a(\"input\",this).on(\"change\",function(){var b=a(this).parents(\"li\").first();b.toggleClass(\"done\"),a(\"input\",b).is(\":checked\")?c.onCheck.call(b):c.onUncheck.call(b)})})}}(jQuery);","(function($, undefined) {\n\n/**\n * Unobtrusive scripting adapter for jQuery\n * https://github.com/rails/jquery-ujs\n *\n * Requires jQuery 1.8.0 or later.\n *\n * Released under the MIT license\n *\n */\n\n  // Cut down on the number of issues from people inadvertently including jquery_ujs twice\n  // by detecting and raising an error when it happens.\n  'use strict';\n\n  if ( $.rails !== undefined ) {\n    $.error('jquery-ujs has already been loaded!');\n  }\n\n  // Shorthand to make it a little easier to call public rails functions from within rails.js\n  var rails;\n  var $document = $(document);\n\n  $.rails = rails = {\n    // Link elements bound by jquery-ujs\n    linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]',\n\n    // Button elements bound by jquery-ujs\n    buttonClickSelector: 'button[data-remote]:not([form]):not(form button), button[data-confirm]:not([form]):not(form button)',\n\n    // Select elements bound by jquery-ujs\n    inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',\n\n    // Form elements bound by jquery-ujs\n    formSubmitSelector: 'form',\n\n    // Form input elements bound by jquery-ujs\n    formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',\n\n    // Form input elements disabled during form submission\n    disableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',\n\n    // Form input elements re-enabled after form submission\n    enableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',\n\n    // Form required input elements\n    requiredInputSelector: 'input[name][required]:not([disabled]), textarea[name][required]:not([disabled])',\n\n    // Form file input elements\n    fileInputSelector: 'input[type=file]:not([disabled])',\n\n    // Link onClick disable selector with possible reenable after remote submission\n    linkDisableSelector: 'a[data-disable-with], a[data-disable]',\n\n    // Button onClick disable selector with possible reenable after remote submission\n    buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]',\n\n    // Up-to-date Cross-Site Request Forgery token\n    csrfToken: function() {\n     return $('meta[name=csrf-token]').attr('content');\n    },\n\n    // URL param that must contain the CSRF token\n    csrfParam: function() {\n     return $('meta[name=csrf-param]').attr('content');\n    },\n\n    // Make sure that every Ajax request sends the CSRF token\n    CSRFProtection: function(xhr) {\n      var token = rails.csrfToken();\n      if (token) xhr.setRequestHeader('X-CSRF-Token', token);\n    },\n\n    // Make sure that all forms have actual up-to-date tokens (cached forms contain old ones)\n    refreshCSRFTokens: function(){\n      $('form input[name=\"' + rails.csrfParam() + '\"]').val(rails.csrfToken());\n    },\n\n    // Triggers an event on an element and returns false if the event result is false\n    fire: function(obj, name, data) {\n      var event = $.Event(name);\n      obj.trigger(event, data);\n      return event.result !== false;\n    },\n\n    // Default confirm dialog, may be overridden with custom confirm dialog in $.rails.confirm\n    confirm: function(message) {\n      return confirm(message);\n    },\n\n    // Default ajax function, may be overridden with custom function in $.rails.ajax\n    ajax: function(options) {\n      return $.ajax(options);\n    },\n\n    // Default way to get an element's href. May be overridden at $.rails.href.\n    href: function(element) {\n      return element[0].href;\n    },\n\n    // Checks \"data-remote\" if true to handle the request through a XHR request.\n    isRemote: function(element) {\n      return element.data('remote') !== undefined && element.data('remote') !== false;\n    },\n\n    // Submits \"remote\" forms and links with ajax\n    handleRemote: function(element) {\n      var method, url, data, withCredentials, dataType, options;\n\n      if (rails.fire(element, 'ajax:before')) {\n        withCredentials = element.data('with-credentials') || null;\n        dataType = element.data('type') || ($.ajaxSettings && $.ajaxSettings.dataType);\n\n        if (element.is('form')) {\n          method = element.data('ujs:submit-button-formmethod') || element.attr('method');\n          url = element.data('ujs:submit-button-formaction') || element.attr('action');\n          data = $(element[0]).serializeArray();\n          // memoized value from clicked submit button\n          var button = element.data('ujs:submit-button');\n          if (button) {\n            data.push(button);\n            element.data('ujs:submit-button', null);\n          }\n          element.data('ujs:submit-button-formmethod', null);\n          element.data('ujs:submit-button-formaction', null);\n        } else if (element.is(rails.inputChangeSelector)) {\n          method = element.data('method');\n          url = element.data('url');\n          data = element.serialize();\n          if (element.data('params')) data = data + '&' + element.data('params');\n        } else if (element.is(rails.buttonClickSelector)) {\n          method = element.data('method') || 'get';\n          url = element.data('url');\n          data = element.serialize();\n          if (element.data('params')) data = data + '&' + element.data('params');\n        } else {\n          method = element.data('method');\n          url = rails.href(element);\n          data = element.data('params') || null;\n        }\n\n        options = {\n          type: method || 'GET', data: data, dataType: dataType,\n          // stopping the \"ajax:beforeSend\" event will cancel the ajax request\n          beforeSend: function(xhr, settings) {\n            if (settings.dataType === undefined) {\n              xhr.setRequestHeader('accept', '*/*;q=0.5, ' + settings.accepts.script);\n            }\n            if (rails.fire(element, 'ajax:beforeSend', [xhr, settings])) {\n              element.trigger('ajax:send', xhr);\n            } else {\n              return false;\n            }\n          },\n          success: function(data, status, xhr) {\n            element.trigger('ajax:success', [data, status, xhr]);\n          },\n          complete: function(xhr, status) {\n            element.trigger('ajax:complete', [xhr, status]);\n          },\n          error: function(xhr, status, error) {\n            element.trigger('ajax:error', [xhr, status, error]);\n          },\n          crossDomain: rails.isCrossDomain(url)\n        };\n\n        // There is no withCredentials for IE6-8 when\n        // \"Enable native XMLHTTP support\" is disabled\n        if (withCredentials) {\n          options.xhrFields = {\n            withCredentials: withCredentials\n          };\n        }\n\n        // Only pass url to `ajax` options if not blank\n        if (url) { options.url = url; }\n\n        return rails.ajax(options);\n      } else {\n        return false;\n      }\n    },\n\n    // Determines if the request is a cross domain request.\n    isCrossDomain: function(url) {\n      var originAnchor = document.createElement('a');\n      originAnchor.href = location.href;\n      var urlAnchor = document.createElement('a');\n\n      try {\n        urlAnchor.href = url;\n        // This is a workaround to a IE bug.\n        urlAnchor.href = urlAnchor.href;\n\n        // If URL protocol is false or is a string containing a single colon\n        // *and* host are false, assume it is not a cross-domain request\n        // (should only be the case for IE7 and IE compatibility mode).\n        // Otherwise, evaluate protocol and host of the URL against the origin\n        // protocol and host.\n        return !(((!urlAnchor.protocol || urlAnchor.protocol === ':') && !urlAnchor.host) ||\n          (originAnchor.protocol + '//' + originAnchor.host ===\n            urlAnchor.protocol + '//' + urlAnchor.host));\n      } catch (e) {\n        // If there is an error parsing the URL, assume it is crossDomain.\n        return true;\n      }\n    },\n\n    // Handles \"data-method\" on links such as:\n    // <a href=\"/users/5\" data-method=\"delete\" rel=\"nofollow\" data-confirm=\"Are you sure?\">Delete</a>\n    handleMethod: function(link) {\n      var href = rails.href(link),\n        method = link.data('method'),\n        target = link.attr('target'),\n        csrfToken = rails.csrfToken(),\n        csrfParam = rails.csrfParam(),\n        form = $('<form method=\"post\" action=\"' + href + '\"></form>'),\n        metadataInput = '<input name=\"_method\" value=\"' + method + '\" type=\"hidden\" />';\n\n      if (csrfParam !== undefined && csrfToken !== undefined && !rails.isCrossDomain(href)) {\n        metadataInput += '<input name=\"' + csrfParam + '\" value=\"' + csrfToken + '\" type=\"hidden\" />';\n      }\n\n      if (target) { form.attr('target', target); }\n\n      form.hide().append(metadataInput).appendTo('body');\n      form.submit();\n    },\n\n    // Helper function that returns form elements that match the specified CSS selector\n    // If form is actually a \"form\" element this will return associated elements outside the from that have\n    // the html form attribute set\n    formElements: function(form, selector) {\n      return form.is('form') ? $(form[0].elements).filter(selector) : form.find(selector);\n    },\n\n    /* Disables form elements:\n      - Caches element value in 'ujs:enable-with' data store\n      - Replaces element text with value of 'data-disable-with' attribute\n      - Sets disabled property to true\n    */\n    disableFormElements: function(form) {\n      rails.formElements(form, rails.disableSelector).each(function() {\n        rails.disableFormElement($(this));\n      });\n    },\n\n    disableFormElement: function(element) {\n      var method, replacement;\n\n      method = element.is('button') ? 'html' : 'val';\n      replacement = element.data('disable-with');\n\n      if (replacement !== undefined) {\n        element.data('ujs:enable-with', element[method]());\n        element[method](replacement);\n      }\n\n      element.prop('disabled', true);\n      element.data('ujs:disabled', true);\n    },\n\n    /* Re-enables disabled form elements:\n      - Replaces element text with cached value from 'ujs:enable-with' data store (created in `disableFormElements`)\n      - Sets disabled property to false\n    */\n    enableFormElements: function(form) {\n      rails.formElements(form, rails.enableSelector).each(function() {\n        rails.enableFormElement($(this));\n      });\n    },\n\n    enableFormElement: function(element) {\n      var method = element.is('button') ? 'html' : 'val';\n      if (element.data('ujs:enable-with') !== undefined) {\n        element[method](element.data('ujs:enable-with'));\n        element.removeData('ujs:enable-with'); // clean up cache\n      }\n      element.prop('disabled', false);\n      element.removeData('ujs:disabled');\n    },\n\n   /* For 'data-confirm' attribute:\n      - Fires `confirm` event\n      - Shows the confirmation dialog\n      - Fires the `confirm:complete` event\n\n      Returns `true` if no function stops the chain and user chose yes; `false` otherwise.\n      Attaching a handler to the element's `confirm` event that returns a `falsy` value cancels the confirmation dialog.\n      Attaching a handler to the element's `confirm:complete` event that returns a `falsy` value makes this function\n      return false. The `confirm:complete` event is fired whether or not the user answered true or false to the dialog.\n   */\n    allowAction: function(element) {\n      var message = element.data('confirm'),\n          answer = false, callback;\n      if (!message) { return true; }\n\n      if (rails.fire(element, 'confirm')) {\n        try {\n          answer = rails.confirm(message);\n        } catch (e) {\n          (console.error || console.log).call(console, e.stack || e);\n        }\n        callback = rails.fire(element, 'confirm:complete', [answer]);\n      }\n      return answer && callback;\n    },\n\n    // Helper function which checks for blank inputs in a form that match the specified CSS selector\n    blankInputs: function(form, specifiedSelector, nonBlank) {\n      var foundInputs = $(),\n        input,\n        valueToCheck,\n        radiosForNameWithNoneSelected,\n        radioName,\n        selector = specifiedSelector || 'input,textarea',\n        requiredInputs = form.find(selector),\n        checkedRadioButtonNames = {};\n\n      requiredInputs.each(function() {\n        input = $(this);\n        if (input.is('input[type=radio]')) {\n\n          // Don't count unchecked required radio as blank if other radio with same name is checked,\n          // regardless of whether same-name radio input has required attribute or not. The spec\n          // states https://www.w3.org/TR/html5/forms.html#the-required-attribute\n          radioName = input.attr('name');\n\n          // Skip if we've already seen the radio with this name.\n          if (!checkedRadioButtonNames[radioName]) {\n\n            // If none checked\n            if (form.find('input[type=radio]:checked[name=\"' + radioName + '\"]').length === 0) {\n              radiosForNameWithNoneSelected = form.find(\n                'input[type=radio][name=\"' + radioName + '\"]');\n              foundInputs = foundInputs.add(radiosForNameWithNoneSelected);\n            }\n\n            // We only need to check each name once.\n            checkedRadioButtonNames[radioName] = radioName;\n          }\n        } else {\n          valueToCheck = input.is('input[type=checkbox],input[type=radio]') ? input.is(':checked') : !!input.val();\n          if (valueToCheck === nonBlank) {\n            foundInputs = foundInputs.add(input);\n          }\n        }\n      });\n      return foundInputs.length ? foundInputs : false;\n    },\n\n    // Helper function which checks for non-blank inputs in a form that match the specified CSS selector\n    nonBlankInputs: function(form, specifiedSelector) {\n      return rails.blankInputs(form, specifiedSelector, true); // true specifies nonBlank\n    },\n\n    // Helper function, needed to provide consistent behavior in IE\n    stopEverything: function(e) {\n      $(e.target).trigger('ujs:everythingStopped');\n      e.stopImmediatePropagation();\n      return false;\n    },\n\n    //  Replace element's html with the 'data-disable-with' after storing original html\n    //  and prevent clicking on it\n    disableElement: function(element) {\n      var replacement = element.data('disable-with');\n\n      if (replacement !== undefined) {\n        element.data('ujs:enable-with', element.html()); // store enabled state\n        element.html(replacement);\n      }\n\n      element.bind('click.railsDisable', function(e) { // prevent further clicking\n        return rails.stopEverything(e);\n      });\n      element.data('ujs:disabled', true);\n    },\n\n    // Restore element to its original state which was disabled by 'disableElement' above\n    enableElement: function(element) {\n      if (element.data('ujs:enable-with') !== undefined) {\n        element.html(element.data('ujs:enable-with')); // set to old enabled state\n        element.removeData('ujs:enable-with'); // clean up cache\n      }\n      element.unbind('click.railsDisable'); // enable element\n      element.removeData('ujs:disabled');\n    }\n  };\n\n  if (rails.fire($document, 'rails:attachBindings')) {\n\n    $.ajaxPrefilter(function(options, originalOptions, xhr){ if ( !options.crossDomain ) { rails.CSRFProtection(xhr); }});\n\n    // This event works the same as the load event, except that it fires every\n    // time the page is loaded.\n    //\n    // See https://github.com/rails/jquery-ujs/issues/357\n    // See https://developer.mozilla.org/en-US/docs/Using_Firefox_1.5_caching\n    $(window).on('pageshow.rails', function () {\n      $($.rails.enableSelector).each(function () {\n        var element = $(this);\n\n        if (element.data('ujs:disabled')) {\n          $.rails.enableFormElement(element);\n        }\n      });\n\n      $($.rails.linkDisableSelector).each(function () {\n        var element = $(this);\n\n        if (element.data('ujs:disabled')) {\n          $.rails.enableElement(element);\n        }\n      });\n    });\n\n    $document.delegate(rails.linkDisableSelector, 'ajax:complete', function() {\n        rails.enableElement($(this));\n    });\n\n    $document.delegate(rails.buttonDisableSelector, 'ajax:complete', function() {\n        rails.enableFormElement($(this));\n    });\n\n    $document.delegate(rails.linkClickSelector, 'click.rails', function(e) {\n      var link = $(this), method = link.data('method'), data = link.data('params'), metaClick = e.metaKey || e.ctrlKey;\n      if (!rails.allowAction(link)) return rails.stopEverything(e);\n\n      if (!metaClick && link.is(rails.linkDisableSelector)) rails.disableElement(link);\n\n      if (rails.isRemote(link)) {\n        if (metaClick && (!method || method === 'GET') && !data) { return true; }\n\n        var handleRemote = rails.handleRemote(link);\n        // Response from rails.handleRemote() will either be false or a deferred object promise.\n        if (handleRemote === false) {\n          rails.enableElement(link);\n        } else {\n          handleRemote.fail( function() { rails.enableElement(link); } );\n        }\n        return false;\n\n      } else if (method) {\n        rails.handleMethod(link);\n        return false;\n      }\n    });\n\n    $document.delegate(rails.buttonClickSelector, 'click.rails', function(e) {\n      var button = $(this);\n\n      if (!rails.allowAction(button) || !rails.isRemote(button)) return rails.stopEverything(e);\n\n      if (button.is(rails.buttonDisableSelector)) rails.disableFormElement(button);\n\n      var handleRemote = rails.handleRemote(button);\n      // Response from rails.handleRemote() will either be false or a deferred object promise.\n      if (handleRemote === false) {\n        rails.enableFormElement(button);\n      } else {\n        handleRemote.fail( function() { rails.enableFormElement(button); } );\n      }\n      return false;\n    });\n\n    $document.delegate(rails.inputChangeSelector, 'change.rails', function(e) {\n      var link = $(this);\n      if (!rails.allowAction(link) || !rails.isRemote(link)) return rails.stopEverything(e);\n\n      rails.handleRemote(link);\n      return false;\n    });\n\n    $document.delegate(rails.formSubmitSelector, 'submit.rails', function(e) {\n      var form = $(this),\n        remote = rails.isRemote(form),\n        blankRequiredInputs,\n        nonBlankFileInputs;\n\n      if (!rails.allowAction(form)) return rails.stopEverything(e);\n\n      // Skip other logic when required values are missing or file upload is present\n      if (form.attr('novalidate') === undefined) {\n        if (form.data('ujs:formnovalidate-button') === undefined) {\n          blankRequiredInputs = rails.blankInputs(form, rails.requiredInputSelector, false);\n          if (blankRequiredInputs && rails.fire(form, 'ajax:aborted:required', [blankRequiredInputs])) {\n            return rails.stopEverything(e);\n          }\n        } else {\n          // Clear the formnovalidate in case the next button click is not on a formnovalidate button\n          // Not strictly necessary to do here, since it is also reset on each button click, but just to be certain\n          form.data('ujs:formnovalidate-button', undefined);\n        }\n      }\n\n      if (remote) {\n        nonBlankFileInputs = rails.nonBlankInputs(form, rails.fileInputSelector);\n        if (nonBlankFileInputs) {\n          // Slight timeout so that the submit button gets properly serialized\n          // (make it easy for event handler to serialize form without disabled values)\n          setTimeout(function(){ rails.disableFormElements(form); }, 13);\n          var aborted = rails.fire(form, 'ajax:aborted:file', [nonBlankFileInputs]);\n\n          // Re-enable form elements if event bindings return false (canceling normal form submission)\n          if (!aborted) { setTimeout(function(){ rails.enableFormElements(form); }, 13); }\n\n          return aborted;\n        }\n\n        rails.handleRemote(form);\n        return false;\n\n      } else {\n        // Slight timeout so that the submit button gets properly serialized\n        setTimeout(function(){ rails.disableFormElements(form); }, 13);\n      }\n    });\n\n    $document.delegate(rails.formInputClickSelector, 'click.rails', function(event) {\n      var button = $(this);\n\n      if (!rails.allowAction(button)) return rails.stopEverything(event);\n\n      // Register the pressed submit button\n      var name = button.attr('name'),\n        data = name ? {name:name, value:button.val()} : null;\n\n      var form = button.closest('form');\n      if (form.length === 0) {\n        form = $('#' + button.attr('form'));\n      }\n      form.data('ujs:submit-button', data);\n\n      // Save attributes from button\n      form.data('ujs:formnovalidate-button', button.attr('formnovalidate'));\n      form.data('ujs:submit-button-formaction', button.attr('formaction'));\n      form.data('ujs:submit-button-formmethod', button.attr('formmethod'));\n    });\n\n    $document.delegate(rails.formSubmitSelector, 'ajax:send.rails', function(event) {\n      if (this === event.target) rails.disableFormElements($(this));\n    });\n\n    $document.delegate(rails.formSubmitSelector, 'ajax:complete.rails', function(event) {\n      if (this === event.target) rails.enableFormElements($(this));\n    });\n\n    $(function(){\n      rails.refreshCSRFTokens();\n    });\n  }\n\n})( jQuery );\n","$('.delete-form').append(function () {\n    var methodForm = \"\\n\";\n    var url = $(this)[0].hasAttribute(\"data-href\") ? $(this).data('href') : $(this).attr('href');\n    methodForm += \"<form action='\" + url + \"' method='POST' style='display:none'>\\n\";\n    methodForm += \"<input type='hidden' name='_method' value='\" + $(this).data('method') + \"'>\\n\";\n    methodForm += \"<input type='hidden' name='_token' value='\" + $('meta[name=csrf-token]').attr('content') + \"'>\\n\";\n    methodForm += \"</form>\\n\";\n\n    return methodForm\n})\n    .attr('onclick', '$(this).find(\"form\").submit();');\n","$(function () {\n\n    $('.sidebar-menu li a[href=\"' + location.href + '\"]')\n        .addClass('active')\n        .closest('li').addClass('active')\n        .closest(\"ul\")\n        .css('display', 'block')\n        .closest('li')\n        .addClass('active');\n\n    $('.edit-in-place').editable({\n        error: function (response, newValue) {\n            if (response.status === 500) {\n                return 'Service unavailable. Please try later.';\n            } else {\n                var obj = $.parseJSON(response.responseText); //  response.responseText;\n                return obj.name;\n            }\n        }\n    });\n\n    $('.ckeditor').ckeditor();\n\n    $('.editable').editable().on('hidden', function (e, reason) {\n        var locale = $(this).data('locale');\n        if (reason === 'save') {\n            $(this).removeClass('status-0').addClass('status-1');\n        }\n        if (reason === 'save' || reason === 'nochange') {\n            var $next = $(this).closest('tr').next().find('.editable.locale-' + locale);\n            setTimeout(function () {\n                $next.editable('show');\n            }, 300);\n        }\n    });\n\n    $('.group-select').on('change', function () {\n        var group = $(this).val();\n        var url = $(this).find(':selected').data('route')\n        if (group) {\n            window.location.href = url + '/' + $(this).val();\n        } else {\n            window.location.href = url;\n        }\n    });\n\n    $(\"a.delete-key\").click(function (event) {\n        event.preventDefault();\n        var row = $(this).closest('tr');\n        var url = $(this).attr('href');\n        var id = row.attr('id');\n        $.post(url, {id: id}, function () {\n            row.remove();\n        });\n    });\n\n    $('.form-import').on('ajax:success', function (e, data) {\n        $('div.success-import strong.counter').text(data.counter);\n        $('div.success-import').slideDown();\n    });\n\n    $('.form-find').on('ajax:success', function (e, data) {\n        $('div.success-find strong.counter').text(data.counter);\n        $('div.success-find').slideDown();\n    });\n\n    $('.form-publish').on('ajax:success', function (e, data) {\n        $('div.success-publish').slideDown();\n    });\n\n});"],"sourceRoot":"/source/"}